#include <iostream>
#include <sstream> 
#include <set>      
#include <vector>  
#include <string>   


class WordProcessor {
private:
    std::string txt;
    std::vector<std::string> wordList;

public:
    void processWords(std::string txt) {
        std::stringstream ss(txt);
        std::string word;

        std::multiset<std::pair<int, std::string>> words;

        while (ss >> word) {
            words.insert({ word.length(), word });  
            wordList.push_back(word);            
        }

        std::string shortestWord = words.begin()->second;

        std::string longestWord = words.rbegin()->second;

        int shortestIndex = -1;
        int longestIndex = -1;

        for (int i = 0; i < wordList.size(); ++i) {
            if (wordList[i] == shortestWord && shortestIndex == -1) {
                shortestIndex = i;
            }
            if (wordList[i] == longestWord && longestIndex == -1) {
                longestIndex = i;
            }
        }

        std::cout << "Shortest word: '" << shortestWord << "' index: " << shortestIndex<< std::endl;

        std::cout << "Longest word: '" << longestWord << "' index: " << longestIndex << std::endl;
    }
};

int main() {
    std::string txt = "Very few live for today. Most are preparing to live later.";
    WordProcessor processor;
    processor.processWords(txt);

    return 0;
}
